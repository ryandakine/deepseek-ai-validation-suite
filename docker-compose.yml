version: '3.8'

services:
  # Main application
  deepseek-suite:
    build: .
    container_name: deepseek-validation-suite
    environment:
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GROK_API_KEY=${GROK_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - HUGGINGFACE_API_TOKEN=${HUGGINGFACE_API_TOKEN}
      - LICENSE_SECRET_KEY=${LICENSE_SECRET_KEY}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./models:/app/models
    ports:
      - "8888:8888"  # GUI port if running web interface
    networks:
      - deepseek-network
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    
  # Redis for caching and task queue
  redis:
    image: redis:7-alpine
    container_name: deepseek-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - deepseek-network
    restart: unless-stopped
    
  # PostgreSQL for enterprise data
  postgres:
    image: postgres:15-alpine
    container_name: deepseek-postgres
    environment:
      - POSTGRES_DB=deepseek_suite
      - POSTGRES_USER=deepseek
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-deepseek123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - deepseek-network
    restart: unless-stopped
    
  # Nginx reverse proxy (for enterprise)
  nginx:
    image: nginx:alpine
    container_name: deepseek-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - deepseek-network
    depends_on:
      - deepseek-suite
    restart: unless-stopped
    profiles:
      - enterprise
    
  # Celery worker for background tasks
  celery-worker:
    build: .
    container_name: deepseek-worker
    command: ["celery", "-A", "deepseek_validation.tasks", "worker", "--loglevel=info"]
    environment:
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GROK_API_KEY=${GROK_API_KEY}
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=postgresql://deepseek:${POSTGRES_PASSWORD:-deepseek123}@postgres:5432/deepseek_suite
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - deepseek-network
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    profiles:
      - enterprise
    
  # Prometheus monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: deepseek-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - deepseek-network
    restart: unless-stopped
    profiles:
      - monitoring
    
  # Grafana dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: deepseek-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    networks:
      - deepseek-network
    depends_on:
      - prometheus
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  deepseek-network:
    driver: bridge